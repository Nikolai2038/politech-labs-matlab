% Расчётное задание 2

clc;

% ========================================
% Настройки
% ========================================
% Номер задания - 1, 2 или 3.
% От него зависит вид сигналов
task_number = 3;

% Временной интервал представления сигнала
T = 2.0;

% Начальное значение максимума коэффициента сходства
maxR = 0;

% Кол-во периодов 1-го сигнала
n = 9;

% Количество периодов несущей частоты радиоимпульса на интервале [0,T]
mm = 10;

% СКО шума
SKO = 0.1;

% Количество точек дискретизации сигнала
k = 1024;

% Интервал для смещения второго сигнала
d = 0.1;
% ========================================

j = 1;

for q = -d:0.001:d
    noise = randn(k + 1, 1) * SKO;

    for i = 1:k
        t(i) = (i - 1) * (T / k);

        % Оконная функция
        w(i) = exp(- (mm * (t(i) - T / 2) / T) ^ 2);

        if task_number == 1
            % Пункт 1. Два гармонических сигнала
            x(i) = sin((2 * pi * n * t(i)) / T);
            y(i) = sin((2 * pi * n * (t(i) - T * q)) / T);
        elseif task_number == 2
            % Пункт 2. Два гармонических сигнала, модулированных по амплитуде экспоненциальной оконной функцией
            x(i) = sin((2 * pi * n * t(i)) / T) * w(i);
            y(i) = sin((2 * pi * n * (t(i) - T * q)) / T) * w(i);
        elseif task_number == 3
            % Пункт 3. Два гармонических сигнала,один из которых зашумлен, модулированных по амплитуде экспоненциальной оконной функцией
            x(i) = sin((2 * pi * n * t(i)) / T) * w(i);
            y(i) = sin((2 * pi * n * (t(i) - T * q)) / T) * w(i) + noise(i);
        end

        % Вычисление массива подинтегрального выражения
        xy(i) = x(i) * y(i);
    end

    int_xy = trapz(xy);
    int_x2 = trapz(power(x, 2));
    int_y2 = trapz(power(y, 2));
    R(j) = int_xy / ((sqrt(int_x2) * sqrt(int_y2)));

    if (R(j) > maxR)
        maxR = R(j);
        maxQ = q;
    end

    j = j + 1;
end

q = (-d:0.001:d);

figure
plot(q, R);
axis tight;
title('Зависимость коэф. корр. от относительного сдвига по времени');
xlabel ('Относительный сдвиг');
ylabel('Коэффициент корреляции');

maxQ;
% Количество точек аппроксимации. Возможные значения: 11, 16, 31, 61, 101, 301
m = 11;

for s = 1:m
    b(s) = (s - 1) * ((2 * d / 0.001) / (m - 1)) + 1;
    R1(s) = R(b(s));
end

% Задание подписей на графиках по оси Х
x = linspace(-d, d, m);

s = 1:m;

figure
plot(x, R1)
axis tight
title('До интерполяции');
xlabel('Относительный сдвиг');
ylabel('Коэффициент сходства');

xx = 1:m;
xi = 1:0.1:m;

% Сплайн-интерполяция - коэффициент корреляции
yint = interp1(xx, R1, xi, 'spline');

r1 = yint;
apr = spaps(x, R1, 0.000001);

figure
fnplt(apr)
axis tight
title('После интерполяции');
xlabel('Относительный сдвиг');
ylabel('Коэффициент сходства');

disp('Нажмите любую клавишу, чтобы продолжить...');
pause
close all;
clear;
