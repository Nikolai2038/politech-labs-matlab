% Расчётное задание 2

clc;

% ========================================
% Настройки
% ========================================
% Временной интервал представления сигнала
T = 2.0;

% Начальное значение максимума коэффициента сходства
maxR = 0;

% Кол-во периодов 1-го сигнала
n = 9;

% Количество периодов несущей частоты радиоимпульса на интервале [0, T]
m = 10;

% СКО шума
SKO = 0.1;

% Количество точек дискретизации сигнала
k = 1024;

% Интервал для смещения второго сигнала
d = 0.1;
% ========================================

% ========================================
% Пункт 1. Два гармонических сигнала
% ========================================
j = 1;
R = zeros(1, 2000 * d);

for q = -d:0.001:d
    t = zeros(1, k);
    x = zeros(1, k);
    y = zeros(1, k);
    xy = zeros(1, k);

    for i = 1:k
        t(i) = (i - 1) * (T / k);

        % Пункт 1. Два гармонических сигнала
        x(i) = cos((2 * pi * n * t(i)) / T);
        y(i) = cos((2 * pi * n * (t(i) - T * q)) / T);

        % Вычисление массива подинтегрального выражения
        xy(i) = abs(x(i) - y(i));
    end

    R(j) = trapz(t, xy);

    j = j + 1;
end

q = (-d:0.001:d);

figure
plot(q, R);
axis tight;
title('Зависимость инт. R от относительного сдвига по времени');
xlabel ('Относительный сдвиг');
ylabel('R');
% ========================================

% ========================================
% Пункт 2*. Два гармонических сигнала, модулированных по амплитуде экспоненциальной оконной функцией
% ========================================
j = 1;
R = zeros(1, 2000 * d);

for q = -d:0.001:d
    t = zeros(1, k);
    x = zeros(1, k);
    y = zeros(1, k);
    xy = zeros(1, k);
    w = zeros(1, k);

    for i = 1:k
        t(i) = (i - 1) * (T / k);

        % Оконная функция
        w(i) = exp(- (m * (t(i) - T / 2) / T) ^ 2);

        x(i) = cos((2 * pi * n * t(i)) / T) * w(i);
        y(i) = cos((2 * pi * n * (t(i) - T * q)) / T) * w(i);

        % Вычисление массива подинтегрального выражения
        xy(i) = abs(x(i) - y(i));
    end

    R(j) = trapz(t, xy);

    j = j + 1;
end

q = (-d:0.001:d);

figure
plot(q, R);
axis tight;
title('Зависимость инт. R от модуля разности сигналов (с окон. фун.)');
xlabel ('Модуль разности сигналов');
ylabel('R');
% ========================================

% ========================================
% Пункт 2**. Два гармонических сигнала, один из которых зашумлен, модулированных по амплитуде экспоненциальной оконной функцией
% ========================================
j = 1;
R = zeros(1, 2000 * d);

for q = -d:0.001:d
    t = zeros(1, k);
    x = zeros(1, k);
    y = zeros(1, k);
    xy = zeros(1, k);
    w = zeros(1, k);
    noise = randn(k + 1, 1) * SKO;

    for i = 1:k
        t(i) = (i - 1) * (T / k);

        % Оконная функция
        w(i) = exp(- (m * (t(i) - T / 2) / T) ^ 2);

        x(i) = cos((2 * pi * n * t(i)) / T) * w(i);
        y(i) = cos((2 * pi * n * (t(i) - T * q)) / T) * w(i) + noise(i);

        % Вычисление массива подинтегрального выражения
        xy(i) = abs(x(i) + y(i));
    end

    R(j) = trapz(t, xy);

    if (R(j) > maxR)
        maxR = R(j);
        maxQ = q;
    end

    j = j + 1;
end

q = (-d:0.001:d);

figure
plot(q, R);
axis tight;
title('Зависимость инт. R от модуля суммы сигналов (с окон. фун. и шумом)');
xlabel ('Модуль разности сигналов');
ylabel('Мат. ож. R');

j = 1;
R = zeros(1, 200);

for skooo = 0:0.001:0.2
    t = zeros(1, k);
    x = zeros(1, k);
    y = zeros(1, k);
    xy = zeros(1, k);
    w = zeros(1, k);
    noise = randn(k + 1, 1) * skooo;

    for i = 1:k
        t(i) = (i - 1) * (T / k);

        % Оконная функция
        w(i) = exp(- (m * (t(i) - T / 2) / T) ^ 2);

        x(i) = cos((2 * pi * n * t(i)) / T) * w(i);
        y(i) = cos((2 * pi * n * (t(i) - T * maxQ)) / T) * w(i) + noise(i);

        % Вычисление массива подинтегрального выражения
        xy(i) = abs(x(i) + y(i));
    end

    R(j) = trapz(t, xy);

    j = j + 1;
end

skooo = (0:0.001:0.2);

figure
plot(skooo, R);
axis tight;
title('Зависимость δ от СКО шума');
xlabel ('СКО шума');
ylabel('δ при котором достигается максимум R(δ)');
% ========================================

disp('Нажмите любую клавишу, чтобы продолжить...');
pause
close all;
clear;
